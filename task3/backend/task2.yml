---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: task2
  name: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: task2
  template:
    metadata:
      labels:
        io.kompose.service: task2
    spec:
      containers:
        - name: backend
          image: dirol13/kbtu-sa:v1
          env:
            - name: LOG_LEVEL
              value: info
            - name: TZ
              value: Asia/Almaty
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config-demo
                  key: DATABASE_HOST
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config-demo
                  key: DATABASE_NAME
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: DATABASE_PASSWORD
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config-demo
                  key: DATABASE_USER
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config-demo
                  key: DATABASE_PORT
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: "150Mi"
            limits:
              memory: "200Mi"
          #        volumeMounts:
          #        - mountPath: /cert/ca.jks
          #          subPath: ca.jks
          #          name: certs
          #          readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 9
            periodSeconds: 10
            failureThreshold: 3
      terminationGracePeriodSeconds: 30
      restartPolicy: Always
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: task2
  name: backend-service
spec:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    io.kompose.service: task2
  type: ClusterIP
status:
  loadBalancer: {}